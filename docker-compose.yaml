version: '3.8'

networks:
  mynetwork:
    driver: bridge

volumes:
  media:
  postgres_data:

services:
  cache:
    image: redis:alpine
    restart: always
    volumes:
      - ./data/cache:/data
    ports:
      - "6379:6379"
    networks:
      - mynetwork

  db:
    image: postgres:13
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '5050:5050'
    networks:
      - mynetwork
    volumes:
      - ./app:/app
      - media:/app/media
    env_file:
      - .env

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./app/static:/usr/share/nginx/html/static
      - ./app/templates:/usr/share/nginx/html/templates
    depends_on:
      - web
    networks:
      - mynetwork

